(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{146:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return i})),n.d(t,"default",(function(){return l}));var r=n(1),c=n(9),a=(n(0),n(156)),o={title:"Services, Load Balancing, and Networking"},s={id:"services",title:"Services, Load Balancing, and Networking",description:"```yaml",source:"@site/docs/services.md",permalink:"/k8s-workshop/docs/services",editUrl:"https://github.com/stackworx/k8s-workshop/edit/master/docs/docs/services.md",sidebar:"someSidebar",previous:{title:"Pods",permalink:"/k8s-workshop/docs/pods"},next:{title:"Workloads",permalink:"/k8s-workshop/docs/workloads"}},i=[{value:"Exercise",id:"exercise",children:[]},{value:"Change the service type",id:"change-the-service-type",children:[]},{value:"Ingress",id:"ingress",children:[]},{value:"References",id:"references",children:[]}],p={rightToc:i};function l(e){var t=e.components,n=Object(c.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"apiVersion: v1\nkind: Service\nmetadata:\n  name: echosvc\nspec:\n  selector:\n    app: echo\n  ports:\n    - protocol: TCP\n      port: 9090 # Published Port\n      targetPort: 8080 # Exposed port in the container\n")),Object(a.b)("h3",{id:"exercise"},"Exercise"),Object(a.b)("p",null,"Save the above content in a file name ",Object(a.b)("inlineCode",{parentName:"p"},"svc.yaml")," and run"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"k apply -f svc.yaml\nk port-forward service/echosvc 9090:9090\nkubectl get endpoints echosvc\n")),Object(a.b)("h3",{id:"change-the-service-type"},"Change the service type"),Object(a.b)("h4",{id:"nodeport"},"NodePort"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"apiVersion: v1\nkind: Service\nmetadata:\n  name: echosvc\nspec:\n  type: NodePort\n  selector:\n    app: echo\n  ports:\n    - protocol: TCP\n      port: 9090 # Published Port\n      targetPort: 8080 # Exposed port in the container\n      # By default and for convenience, the Kubernetes control plane will allocate a port from a range (default: 30000-32767)\n      nodePort: 30007\n")),Object(a.b)("h4",{id:"loadbalancer"},"LoadBalancer"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"apiVersion: v1\nkind: Service\nmetadata:\n  name: echosvc\nspec:\n  type: LoadBalancer\n  selector:\n    app: echo\n  ports:\n    - protocol: TCP\n      port: 9090 # Published Port\n      targetPort: 8080 # Exposed port in the container\n")),Object(a.b)("h3",{id:"ingress"},"Ingress"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"apiVersion: networking.k8s.io/v1beta1\nkind: Ingress\nmetadata:\n  name: test-ingress\n  annotations:\n    nginx.ingress.kubernetes.io/rewrite-target: /\nspec:\n  rules:\n    - http:\n        paths:\n          - path: /testpath\n            pathType: Prefix\n            backend:\n              serviceName: test\n              servicePort: 80\n")),Object(a.b)("h3",{id:"references"},"References"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object(r.a)({parentName:"li"},{href:"https://kubernetes.io/docs/concepts/services-networking/service/#service-resource"}),"https://kubernetes.io/docs/concepts/services-networking/service/#service-resource")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object(r.a)({parentName:"li"},{href:"https://kubernetes.io/docs/tasks/debug-application-cluster/debug-service/"}),"https://kubernetes.io/docs/tasks/debug-application-cluster/debug-service/")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object(r.a)({parentName:"li"},{href:"https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types"}),"https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object(r.a)({parentName:"li"},{href:"https://kubernetes.io/docs/concepts/services-networking/ingress-controllers/"}),"https://kubernetes.io/docs/concepts/services-networking/ingress-controllers/")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object(r.a)({parentName:"li"},{href:"https://docs.traefik.io/providers/kubernetes-ingress/"}),"https://docs.traefik.io/providers/kubernetes-ingress/"))))}l.isMDXComponent=!0},156:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var r=n(0),c=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,c=function(e,t){if(null==e)return{};var n,r,c={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(c[n]=e[n]);return c}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(c[n]=e[n])}return c}var p=c.a.createContext({}),l=function(e){var t=c.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s({},t,{},e)),n},b=function(e){var t=l(e.components);return c.a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return c.a.createElement(c.a.Fragment,{},t)}},d=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),b=l(n),d=r,m=b["".concat(o,".").concat(d)]||b[d]||u[d]||a;return n?c.a.createElement(m,s({ref:t},p,{components:n})):c.a.createElement(m,s({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var p=2;p<a;p++)o[p]=n[p];return c.a.createElement.apply(null,o)}return c.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);